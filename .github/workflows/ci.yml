name: CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    types: [opened, synchronize]

env:
  AUTH_COOKIE_DOMAIN: "fake"
  GITHUB_ID: "fake"
  GITHUB_SECRET: "fake"
  TWITCH_ID: "fake"
  TWITCH_SECRET: "fake"
  DISCORD_ID: "fake"
  DISCORD_SECRET: "fake"

jobs:
  build:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest

    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    #  TURBO_REMOTE_ONLY: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: |
          pnpm run -C ./db/prisma/ prisma:generate
          pnpm run -r build

      # - name: Test
      #   run: npm run test
