schema {
  query: Query
  mutation: Mutation
}

type Query {
  pano: PanoQuery
}

# PanoQuery contains all the fields related to pano-api
type PanoQuery {
  post(input: PanoPostInput): Post
  posts(input: PanoPostsInput): PanoPostsConnection
}

input PanoPostInput {
  slug: String!
  id: String!
}

input PanoPostsInput {
  cursor: Cursor
}

type PanoPostsConnection {
  edges: PanoPostsConnectionEdge
  pageInfo: PageInfo
}

type PanoPostsConnectionEdge {
  cursor: String
  node: PanoPost
}

type Post {
  ID: ID!
  title: String!
  url: String!
  content: String
  slug: String!
  userID: String!
}

type Mutation {
  createPost(input: CreatePostInput): Post
}

input CreatePostInput {
  title: String!
  url: String!
  content: String
  userID: String!
}
