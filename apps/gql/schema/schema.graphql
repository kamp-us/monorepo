scalar Date
scalar DateTime

type Query {
  user(id: ID, username: String): User
  sozluk: SozlukQuery!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type User {
  id: ID!
  username: String!
}

input UserInput {
  id: ID
  username: String
}

type SozlukQuery {
  term(id: ID!): SozlukTerm
  terms(after: String, before: String, first: Int, last: Int): SozlukTermConnection
}

type SozlukTerm {
  id: ID!
  title: String!
  tags: [String!]!
  body: SozlukTermBody!
}

type SozlukTermBody {
  raw: String!
  code: String!
  html: String!
}

type SozlukTermConnection {
  edges: [SozlukTermEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SozlukTermEdge {
  cursor: String!
  node: SozlukTerm
}
